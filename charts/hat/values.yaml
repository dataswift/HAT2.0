# Default values for hat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dataswift/hat
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

env:
  config: 
    ADJUDICATOR_ADDRESS: "contracts.dataswift.dev"
    AWS_REGION: "eu-west-1"
    CORS_ALLOWED_ORIGIN_1: "https://developers.dataswift.dev"
    CORS_ALLOWED_ORIGIN_2: "http://localhost:3000"
    CORS_ALLOWED_ORIGIN_3: "https://localhost:3000"
    CORS_ALLOWED_ORIGIN_4: "https://developers.dataswift.dev"
    DEX_ADDRESS: "dex.dataswift.dev"
    DROPS_SHE_BASE_URL: "drops-she-staging"
    ELASTICACHE_CONFIG_ENDPOINT: "dsw-ca-ro05jyxnfn0k.onquve.cfg.euw1.cache.amazonaws.com:11211"
    HAT_ADMIN_EMAIL: "systems@dataswift.io"
    HAT_BETA: "true"
    HAT_DB_IDLE_TIMEOUT: "60 seconds"
    HAT_DB_THREADS: "15"
    HAT_DOMAIN: ".dataswift.dev"
    HAT_SERVER_PROVIDER: "org.hatdex.hat.modules.HatServerProviderModule"
    HAT_STORAGE_S3_BUCKET: "dswift-hat-stage-hatservicefar-y9-storages3bucket-7oi63342ympf"
    JAVA_OPTS: "-Xmx1000m -Xms512m"
    MAILER_FROM: "Dataswift <systems@dataswift.dev>"
    MILLINER_ADDRESS: "dataswift.dev"
    PDA_REGISTRY_HOST: "hatters.dataswift.dev"
    RESOURCE_MGMT_SERVER_IDLE_TIMEOUT: "180 seconds"
    SHE_BASE_URL: "dswift-she-staging"
  secret:
    enabled: false
    name: ""

service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
