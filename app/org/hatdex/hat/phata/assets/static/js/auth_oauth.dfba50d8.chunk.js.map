{"version":3,"sources":["components/banners/NotificationBanner/NotificationBanner.tsx","features/hat-login/HatLoginParamValidation.tsx","features/hat-login/HatLoginRedirectError.tsx","features/hat-login/HatApplicationHandler.tsx","features/hat-login/HatLoginBuildRedirect.tsx","features/hat-login/HatLoginSetupDependency.tsx","features/oauth/OauthPermissions.tsx","features/oauth/Oauth.tsx"],"names":["NotificationBanner","type","children","fixed","display","className","HatLoginParamValidation","props","dispatch","useDispatch","useEffect","queryString","window","location","search","application_id","name","redirect_uri","redirect","applicationId","applicationIdSafe","toLowerCase","getApplicationsHmi","setRedirectError","HatLoginRedirectError","useState","redirectNotProvided","setRedirectNotProvided","redirectError","useSelector","selectRedirectError","fallback","internal","error","isInternal","redirectWithError","errorReason","redirectParam","replace","callBackUrlWithError","href","RedirectError","environment","sandbox","target","rel","HatLoginApplicationHandler","errorMessage","selectErrorMessage","applications","selectApplications","parentApp","selectParentApp","tools","selectTools","length","find","app","application","id","indexOf","kind","parentPlugDependencies","dependencies","plugs","parentToolDependencies","setParentApp","setDependencyApps","filter","getTools","setDependencyTools","tool","onClick","HatLoginBuildRedirect","dependencyApps","selectDependencyApps","dependencyPlugsAreActive","selectDependencyPlugsAreActive","dependencyToolsAreEnabled","selectDependencyToolsEnabled","buildRedirect","a","hatSvc","HatClientService","getInstance","appLogin","resAppLogin","parsedBody","accessToken","setup","isRedirectUrlValid","url","iosUrl","androidUrl","testingUrl","decodeURI","attemptedSetup","date","addMinutes","Date","sessionStorage","setItem","JSON","stringify","console","warn","sendReport","then","catch","active","needsUpdating","getItem","enabled","session","parse","isFuture","parseISO","HatLoginSetupDependency","plugsAreActive","setupAppDependencies","d","callback","intermediateCallBackUrl","log","appId","split","dependenciesParam","dependencyArray","item","join","map","OauthPermissions","hatName","host","language","selectLanguage","dependencyTools","selectDependencyTools","LoadingSpinner","loadingText","hmiType","HmiType","login","daas","email","info","onApproved","onTermsAgreed","onRejected","onTermsDeclined","Oauth"],"mappings":"oHAAA,sDAUaA,GAVb,OAUmD,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC3E,OACE,6BACGA,GACC,oCACE,yBAAKC,UAAS,oFAEqBJ,EAFrB,0BAGTE,EAAQ,qBAAuB,OAExB,UAATF,GACC,uBAAGI,UAAU,qDAAb,WAEDH,Q,uDCvBb,mDA2CeI,IA1BkC,SAAAC,GAC/C,IAAMC,EAAWC,cAsBjB,OApBAC,qBAAU,WAAO,IAAD,EAEVC,QAAkBC,OAAOC,SAASC,QAD9BC,EADM,EACNA,eAAgBC,EADV,EACUA,KAAMC,EADhB,EACgBA,aAAcC,EAD9B,EAC8BA,SAEtCC,EAAgBJ,GAAkBC,EAClCI,EAAiB,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,cAazCb,EAZsBS,GAAgBC,EAOjCE,EAKIE,YAAmBF,GAJjBG,YAAiB,4BAA6B,+BAL9CA,YAAiB,4BAA6B,4BAUxD,CAACf,IAEG,oCAAGD,EAAML,Y,2FCkDHsB,IAzEgC,SAAAjB,GAAU,IAAD,EACAkB,oBAAS,GADT,mBAC/CC,EAD+C,KAC1BC,EAD0B,KAEhDC,EAAgBC,YAAYC,KAElCpB,qBAAU,WAAO,IAAD,EACyCC,QAAkBC,OAAOC,SAASC,QAAjFG,EADM,EACNA,aAAcC,EADR,EACQA,SAAUa,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,SAkB1C,GAAIJ,GAAiBA,EAAcK,MAAO,CACxC,IAAMC,EAA0B,SAAbF,EAEbG,EAnBqB,SAACF,EAAeG,GAC3C,IAAMC,EAAgBpB,GAAgBC,EAEtC,OAAIa,IAIAM,EACO,UAAOA,EAAP,kBAAgCJ,EAAhC,2BAA0DG,GAExDE,QAAQ,IAAK,OAEjB,MAOiBC,CAAqBX,EAAcK,MAAOL,EAAcQ,aAElF,IAAKD,EAEH,YADAR,GAAuB,GAKvBf,OAAOC,SAAS2B,KADdN,GACqBH,GAEAI,KAG1B,CAACP,IAEJ,IAAMa,EAAgB,WACpB,OAAIC,IAAYC,QACN,6BACN,yBAAKtC,UAAU,aACb,wBAAIA,UAAU,oBAAd,6CACA,uBAAGA,UAAU,kBAAb,4EAC+E,6BAC7E,uBAAGmC,KAAM,+DACPI,OAAO,SACPC,IAAI,uBAFN,iBAUE,6BACN,yBAAKxC,UAAU,aACb,wBAAIA,UAAU,oBAAd,6CACA,uBAAGA,UAAU,kBAAb,wFASR,OAAO,oCAAGqB,EAAsB,kBAACe,EAAD,MAAoBlC,EAAML,Y,iCCvF5D,mEAsFe4C,IAjEqC,SAAAvC,GAClD,IAAMwC,EAAelB,YAAYmB,KAC3BC,EAAepB,YAAYqB,KAC3BC,EAAYtB,YAAYuB,KACxBC,EAAQxB,YAAYyB,KACpB9C,EAAWC,cAEjBC,qBAAU,WACR,GAAIuC,GAAgBA,EAAaM,OAAS,EAAG,CAAC,IAAD,MACV5C,QAAkBC,OAAOC,SAASC,QAA3DC,EADmC,EACnCA,eAAgBC,EADmB,EACnBA,KAElBG,EAAgBJ,GAAkBC,EAClCI,EAAiB,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,cACnC8B,EAAYF,EAAaO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,YAAYC,KAAOvC,KAElE,IAAK+B,IAAgF,IAAlE,CAAC,MAAO,YAAYS,QAAQT,EAAUO,YAAYG,KAAKA,MAExE,YADArD,EAASe,YAAiB,4BAA6B,8BAIzD,IAAMuC,GAAyB,UAAAX,EAAUO,YAAYK,oBAAtB,eAAoCC,QAAS,GACtEC,GAAyB,UAAAd,EAAUO,YAAYK,oBAAtB,eAAoCV,QAAS,GAE5E7C,EAAS0D,YAAaf,IACtB3C,EAAS2D,YAAkBlB,EAAamB,QAAO,SAAAX,GAAG,OAAIK,EAAuBF,QAAQH,EAAIC,YAAYC,KAAO,OAExGM,EAAuBV,OAAS,GAClC/C,EAAS6D,kBAIZ,CAACpB,EAAczC,IAElBE,qBAAU,WACR,GAAI2C,GAASA,EAAME,OAAS,EAAG,CAAC,IAAD,EAC7B,IAAKJ,EAAW,OAEhB,IAAMc,GAAyB,UAAAd,EAAUO,YAAYK,oBAAtB,eAAoCV,QAAS,GAE5E7C,EAAS8D,YAAmBjB,EAAMe,QAAO,SAAAG,GAAI,OAAiD,IAA7CN,EAAuBL,QAAQW,EAAKZ,YAEtF,CAACR,EAAWE,EAAO7C,IAMtB,OAAIuC,GAAwC,IAAxBE,EAAaM,OAE7B,6BACE,yBAAKlD,UAAU,aACb,wBAAIA,UAAU,oBAAd,mCACA,uBAAGA,UAAU,kBAAkB0C,GAC/B,4BAAQ1C,UAAW,iBACjBmE,QAAS,WAVjBhE,EAASe,YAAiB,gBAAiB,4BASrC,UASD,oCAAGhB,EAAML,Y,mICwBHuE,IAjFgC,SAAAlE,GAC7C,IAAM4C,EAAYtB,YAAYuB,KACxBsB,EAAiB7C,YAAY8C,KAC7BC,EAA2B/C,YAAYgD,KACvCC,EAA4BjD,YAAYkD,KA0E9C,OAxEArE,qBAAU,WACR,IAAMsE,EAAa,uCAAG,WAAOvB,GAAP,qCAAAwB,EAAA,2DAEhBtE,QAAkBC,OAAOC,SAASC,QAD9BG,EADY,EACZA,aAAcC,EADF,EACEA,SAAUc,EADZ,EACYA,SAI1BK,EAAgBpB,GAAgBC,IADN,SAAbc,GAJC,gBAQlBpB,OAAOC,SAAS2B,KAAOH,GAAiB,GARtB,8BAUZ6C,EAASC,IAAiBC,cAVd,mBAaUF,EAAOG,SAAS5B,EAAIC,YAAYC,IAb1C,SAehB,QAFM2B,EAbU,cAehB,IAAIA,GAAJ,UAAIA,EAAaC,kBAAjB,aAAI,EAAyBC,eACnBA,EAAgBF,EAAYC,WAA5BC,YACFC,EAAQhC,EAAIC,YAAY+B,MAGxBC,GAC0C,IADrB,CAACD,EAAME,IAAKF,EAAMG,OAAQH,EAAMI,WAAYJ,EAAMK,YAC1ElC,QAAQmC,UAAU1D,GAAiB,KAEhC2D,EAAiB,CACrB7E,cAAesC,EAAIC,YAAYC,GAC/BsC,KAAMC,YAAW,IAAIC,KAAQ,KAG/BC,eAAeC,QAAQ,kBAAmBC,KAAKC,UAAUP,IAErDN,EAEF9E,OAAOC,SAAS2B,KAAhB,iBAA2BH,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAeC,QAAQ,IAAK,QAAvD,QAAoG,KAApB,OAAbD,QAAa,IAAbA,OAAA,EAAAA,EAAeuB,QAAQ,MAAe,IAAM,IAA/G,iBAA6H4B,IAE7HgB,QAAQC,KAAK,kCAEbvB,EAAOwB,WAAW,2BAAlB,UAAkDjD,EAAIC,YAAYC,GAAlE,aAA2EtB,IACxEsE,MAAK,WAEJ/F,OAAOC,SAAS2B,KAAhB,iBAA2BH,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAeC,QAAQ,IAAK,QAAvD,QAAoG,KAApB,OAAbD,QAAa,IAAbA,OAAA,EAAAA,EAAeuB,QAAQ,MAAe,IAAM,IAA/G,iBAA6H4B,MAC5HoB,OAAM,WAEPhG,OAAOC,SAAS2B,KAAhB,iBAA2BH,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAeC,QAAQ,IAAK,QAAvD,QAAoG,KAApB,OAAbD,QAAa,IAAbA,OAAA,EAAAA,EAAeuB,QAAQ,MAAe,IAAM,IAA/G,iBAA6H4B,QA1CrH,4GAAH,sDAkDnB,GAAIrC,GACAA,EAAU0D,SACT1D,EAAU2D,eACXlC,GACAE,EACFE,EAAc7B,OALhB,CASA,IAAM6C,EAAiBI,eAAeW,QAAQ,mBAE9C,GAAI5D,GAAaA,EAAU6D,SAAWhB,EAAgB,CACpD,IAAMiB,EAAUX,KAAKY,MAAMlB,GAE3B,GAAKiB,EAAQ9F,gBAAkBgC,EAAUO,YAAYC,IAAOwD,YAASC,YAASH,EAAQhB,OAEpF,YADAjB,EAAc7B,OAIjB,CAACA,EAAWuB,EAAgBE,EAA0BE,IAElD,oCAAGvE,EAAML,Y,mICKHmH,IArFkC,SAAA9G,GAC/C,IAAM4C,EAAYtB,YAAYuB,KACxBsB,EAAiB7C,YAAY8C,KAC7B2C,EAAiBzF,YAAYgD,KA+EnC,OA7EAnE,qBAAU,WAAO,IAAD,EAEVC,QAAkBC,OAAOC,SAASC,QAD9BC,EADM,EACNA,eAAgBC,EADV,EACUA,KAAMC,EADhB,EACgBA,aAAcC,EAD9B,EAC8BA,SAAU6C,EADxC,EACwCA,aAGhDwD,EAAoB,uCAAG,WAAOxD,GAAP,yBAAAkB,EAAA,yDACrBxB,EAAMM,EAAaK,QAAO,SAAAoD,GAAC,OAAKA,EAAEX,UAAQ,GAC1CY,EAAWC,EAAwBjE,EAAIC,YAAYC,IAF9B,SAKnBuB,EAASC,IAAiBC,gBALP,OAOrB3B,QAPqB,IAOrBA,OAPqB,EAOrBA,EAAKC,YAAYC,IAPI,gCAQGuB,EAAOG,SAAS5B,EAAIC,YAAYC,IARnC,QAUvB,QAFM2B,EARiB,cAUvB,IAAIA,GAAJ,UAAIA,EAAaC,kBAAjB,aAAI,EAAyBC,eACrBQ,EAAiB,CACrB7E,cAAa,OAAEgC,QAAF,IAAEA,OAAF,EAAEA,EAAWO,YAAYC,GACtCsC,KAAMC,YAAW,IAAIC,KAAQ,KAG/BC,eAAeC,QAAQ,kBAAmBC,KAAKC,UAAUP,IAGzDpF,OAAOC,SAAS2B,KAAhB,UAA2BiB,EAAIC,YAAY+B,MAAME,IAAjD,kBAAgEL,EAAYC,WAAWC,YAAvF,qBAAiHiC,IAnB5F,yDAuBzBjB,QAAQmB,IAAI,6BAAZ,MAvByB,0DAAH,sDA2BpBD,EAA0B,SAACE,GAC/B,IAAIjC,EAAM/E,OAAOC,SAAS2B,KAAKqF,MAAM,KAAK,GACpC1G,EAAgBJ,GAAkBC,EAClCI,EAAiB,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,cACnCgB,EAAgBpB,GAAgBC,EAChC4G,EAAoB/D,EAI1B,GAFA4B,GAAG,0BAAwBvE,EAAxB,2BAA8DiB,GAE7DyF,EAAmB,CAErB,IAAMC,EAAkBD,EAAkBD,MAAM,KAAKzD,QAAO,SAAA4D,GAAI,OAAIA,IAASJ,KACzEG,GAAmBA,EAAgBxE,OAAS,IAC9CoC,GAAG,0BAAwBoC,EAAgBE,cAG7C,GAAIvD,EAAgB,CAClB,IAAMqD,EAAkBrD,EACrBN,QAAO,SAAAX,GAAG,OAAIA,EAAIC,YAAYC,KAAOiE,KACrCM,KAAI,SAAAzE,GAAG,OAAIA,EAAIC,YAAYC,MAC1BoE,GAAmBA,EAAgBxE,OAAS,IAC9CoC,GAAG,0BAAwBoC,EAAgBE,SAKjD,OAAOtC,EAAIrD,QAAQ,IAAK,QAGpB0D,EAAiBI,eAAeW,QAAQ,mBAE9C,GAAI5D,GAAauB,GAAkBA,EAAenB,OAAS,GAAKyC,EAAgB,CAC9E,IAAMiB,EAAUX,KAAKY,MAAMlB,GAE3B,GAAKiB,EAAQ9F,gBAAkBgC,EAAUO,YAAYC,IAAOwD,YAASC,YAASH,EAAQhB,OACpF,OAIA9C,GAAaA,EAAU0D,SAAWS,GACpCC,EAAqB7C,KAItB,CAACvB,EAAWuB,EAAgB4C,IAExB,oCAAG/G,EAAML,Y,iMChDHiI,EAjDoB,WAAO,IAAD,IACjCC,EAAUxH,OAAOC,SAASwH,KAC1B7H,EAAWC,cACX6H,EAAWzG,YAAY0G,KACvBpF,EAAYtB,YAAYuB,KACxBL,EAAelB,YAAYmB,KAC3B0B,EAAiB7C,YAAY8C,KAC7B6D,EAAkB3G,YAAY4G,KAMpC,OAAMtF,GAAcA,EAAU0D,SAAW1D,EAAU2D,eAAoB3D,EAAUO,YAAYK,eACzF,UAAAZ,EAAUO,YAAYK,aAAaC,aAAnC,eAA0CT,UAAWmB,EAAenB,QACnEJ,EAAUO,YAAYK,eACnB,UAAAZ,EAAUO,YAAYK,aAAaV,aAAnC,eAA0CE,UAAWiF,EAAgBjF,OACpE,kBAACmF,EAAA,EAAD,CAAgBC,YAAa,2BAIpC,6BACE,kBAAC3I,EAAA,EAAD,CAAoBC,KAAM,QAASG,UAAW2C,EAAc5C,OAAK,GAC/D,yBAAKE,UAAW,0BACd,+GACmF,6BADnF,0DAE0D,IACxD,uBAAGmC,KAAM,8BAA+BnC,UAAW,eAAnD,eAEF,4BAAQA,UAAW,iBAAkBmE,QAAS,WAnBpDhE,EAASe,YAAiB,gBAAiB,kCAmBrC,UAIJ,0BAAMlB,UAAW,sBAChB8C,GACD,kBAAC,IAAD,CAAOyF,QAASC,IAAQC,MAAMC,KAC5B5F,UAAWA,EAAUO,YACrBsF,MAAOZ,EACPE,SAAUA,EACVE,gBAAiBA,EAAgBN,KAAI,SAAA3D,GAAI,OAAIA,EAAK0E,KAAKjI,QACvD0D,eAAgBA,EAAewD,KAAI,SAAAzE,GAAG,OAAIA,EAAIC,eAC9CwF,WAAY,kBAAM1I,EAAS2I,aAAuB,OAAThG,QAAS,IAATA,OAAA,EAAAA,EAAWO,YAAYC,KAAM,MACtEyF,WAAY,kBAAM5I,EAAS6I,oBC1BpBC,UAhBS,WACtB,OACE,kBAAChJ,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAACmE,EAAA,EAAD,KACE,kBAAC4C,EAAA,EAAD,KACE,kBAAC7F,EAAA,EAAD,KACE,kBAAC,EAAD","file":"static/js/auth_oauth.dfba50d8.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport './NotificationBanner.scss';\n\ntype Props = {\n  type: string;\n  display: boolean;\n  children: ReactNode;\n  fixed?: boolean;\n}\n\nexport const NotificationBanner: React.FC<Props> = ({ type, children, fixed, display }) => {\n  return (\n    <div>\n      {display && (\n        <>\n          <div className={\n            `notification-banner-container \n            notification-banner-container-${ type } \n            ${ fixed ? 'notification-fixed' : null }`\n          }>\n            {type === 'error' && (\n              <i className=\"material-icons notification-banner-container-icon\">warning</i>\n            )}\n            {children}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { getApplicationsHmi } from \"../applications/applicationsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { setRedirectError } from \"./hatLoginSlice\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n}\n\nconst HatLoginParamValidation: React.FC<Props> = props => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { application_id, name, redirect_uri, redirect } =\n        queryString.parse(window.location.search) as Query;\n    const applicationId = application_id || name;\n    const applicationIdSafe = applicationId?.toLowerCase();\n    const redirectParam = redirect_uri || redirect;\n\n    if (!redirectParam) {\n      dispatch(setRedirectError('application_misconfigured', 'redirect_is_required '));\n      return;\n    }\n\n    if (!applicationIdSafe) {\n      dispatch(setRedirectError('application_misconfigured', 'application_id_is_required '));\n      return;\n    }\n\n    dispatch(getApplicationsHmi(applicationIdSafe));\n  }, [dispatch]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginParamValidation;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRedirectError } from \"./hatLoginSlice\";\nimport { environment } from \"../../environment\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n}\n\nconst HatLoginRedirectError: React.FC<Props> = props => {\n  const [redirectNotProvided, setRedirectNotProvided] = useState(false);\n  const redirectError = useSelector(selectRedirectError);\n\n  useEffect(() => {\n    const { redirect_uri, redirect, fallback, internal } = queryString.parse(window.location.search) as Query;\n\n    const callBackUrlWithError = (error: string, errorReason: string): string | null => {\n      const redirectParam = redirect_uri || redirect;\n\n      if (fallback) {\n        return fallback;\n      }\n\n      if (redirectParam) {\n        const url = `${ redirectParam }?error=${ error }%26error_reason=${ errorReason }`;\n\n        return url.replace('#', '%23');\n      } else {\n        return null;\n      }\n    };\n\n    if (redirectError && redirectError.error) {\n      const isInternal = internal === 'true';\n\n      const redirectWithError = callBackUrlWithError(redirectError.error, redirectError.errorReason);\n\n      if (!redirectWithError) {\n        setRedirectNotProvided(true);\n        return;\n      }\n\n      if (isInternal) {\n        window.location.href = fallback || redirectWithError;\n      } else {\n        window.location.href = redirectWithError;\n      }\n    }\n  }, [redirectError]);\n\n  const RedirectError = () => {\n    if (environment.sandbox) {\n      return (<div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Ooops... Looks like something went wrong.</h3>\n          <p className=\"app-error-text\">\n                ERROR: App details incorrect. \"redirect_uri\" query parameter is missing. <br />\n            <a href={'https://docs.dataswift.io/guides/hat-login/02-send-hat-login'}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                  Learn more\n            </a>\n          </p>\n        </div>\n      </div>\n      );\n    } else {\n      return (<div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Ooops... Looks like something went wrong.</h3>\n          <p className=\"app-error-text\">\n            ERROR: App details incorrect. Please contact the app developer and let them know.\n          </p>\n        </div>\n      </div>\n      );\n    }\n  };\n\n  return <>{redirectNotProvided ? <RedirectError /> : props.children}</>;\n};\n\nexport default HatLoginRedirectError;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectApplications } from \"../applications/applicationsSlice\";\nimport { selectErrorMessage, setRedirectError } from \"./hatLoginSlice\";\nimport { selectParentApp, setDependencyApps, setDependencyTools, setParentApp } from \"../hmi/hmiSlice\";\nimport { getTools, selectTools } from \"../tools/toolsSlice\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n}\n\nconst HatLoginApplicationHandler: React.FC<Props> = props => {\n  const errorMessage = useSelector(selectErrorMessage);\n  const applications = useSelector(selectApplications);\n  const parentApp = useSelector(selectParentApp);\n  const tools = useSelector(selectTools);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (applications && applications.length > 0) {\n      const { application_id, name } = queryString.parse(window.location.search) as Query;\n\n      const applicationId = application_id || name;\n      const applicationIdSafe = applicationId?.toLowerCase();\n      const parentApp = applications.find(app => app.application.id === applicationIdSafe);\n\n      if (!parentApp || (['App', 'DataPlug'].indexOf(parentApp.application.kind.kind) === -1)) {\n        dispatch(setRedirectError('application_misconfigured', 'application_id_not_found '));\n        return;\n      }\n\n      const parentPlugDependencies = parentApp.application.dependencies?.plugs || [];\n      const parentToolDependencies = parentApp.application.dependencies?.tools || [];\n\n      dispatch(setParentApp(parentApp));\n      dispatch(setDependencyApps(applications.filter(app => parentPlugDependencies.indexOf(app.application.id) > -1)));\n\n      if (parentToolDependencies.length > 0) {\n        dispatch(getTools());\n      }\n    }\n\n  }, [applications, dispatch]);\n\n  useEffect(() => {\n    if (tools && tools.length > 0) {\n      if (!parentApp) return;\n\n      const parentToolDependencies = parentApp.application.dependencies?.tools || [];\n\n      dispatch(setDependencyTools(tools.filter(tool => parentToolDependencies.indexOf(tool.id) !== -1)));\n    }\n  }, [parentApp, tools, dispatch]);\n\n  const redirectBack = () => {\n    dispatch(setRedirectError('hat_exception', 'internal_server_error'));\n  };\n\n  if (errorMessage && applications.length === 0) {\n    return (\n      <div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Looks like something went wrong</h3>\n          <p className=\"app-error-text\">{errorMessage}</p>\n          <button className={'btn btn-accent'}\n            onClick={() => redirectBack()}>\n            Back\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginApplicationHandler;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HatApplication } from \"@dataswift/hat-js/lib/interfaces/hat-application.interface\";\nimport { HatClientService } from \"../../services/HatClientService\";\nimport {\n  selectDependencyApps,\n  selectDependencyPlugsAreActive,\n  selectDependencyToolsEnabled,\n  selectParentApp\n} from \"../hmi/hmiSlice\";\nimport * as queryString from \"query-string\";\nimport { addMinutes, isFuture, parseISO } from \"date-fns\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n}\n\nconst HatLoginBuildRedirect: React.FC<Props> = props => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const dependencyPlugsAreActive = useSelector(selectDependencyPlugsAreActive);\n  const dependencyToolsAreEnabled = useSelector(selectDependencyToolsEnabled);\n\n  useEffect(() => {\n    const buildRedirect = async (app: HatApplication) => {\n      const { redirect_uri, redirect, internal } =\n          queryString.parse(window.location.search) as Query;\n\n      const isInternal = internal === 'true';\n      const redirectParam = redirect_uri || redirect;\n\n      if (isInternal) {\n        window.location.href = redirectParam || '';\n      } else {\n        const hatSvc = HatClientService.getInstance();\n\n        try {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            const { accessToken } = resAppLogin.parsedBody;\n            const setup = app.application.setup;\n\n            // TODO Change this logic to the new validRedirectUris field\n            const isRedirectUrlValid = [setup.url, setup.iosUrl, setup.androidUrl, setup.testingUrl]\n              .indexOf(decodeURI(redirectParam || '')) !== -1;\n\n            const attemptedSetup = {\n              applicationId: app.application.id,\n              date: addMinutes(new Date(), 10)\n            };\n\n            sessionStorage.setItem('attempted_setup', JSON.stringify(attemptedSetup));\n\n            if (isRedirectUrlValid) {\n              // eslint-disable-next-line max-len\n              window.location.href = `${ redirectParam?.replace('#', '%23') }${ (redirectParam?.indexOf('?') !== -1) ? '&' : '?' }token=${ accessToken }`;\n            } else {\n              console.warn('Provided URL is not registered');\n\n              hatSvc.sendReport('hmi_invalid_redirect_url', `${ app.application.id }: ${ redirectParam }`)\n                .then(() => {\n                  // eslint-disable-next-line max-len\n                  window.location.href = `${ redirectParam?.replace('#', '%23') }${ (redirectParam?.indexOf('?') !== -1) ? '&' : '?' }token=${ accessToken }`;\n                }).catch(() => {\n                  // eslint-disable-next-line max-len\n                  window.location.href = `${ redirectParam?.replace('#', '%23') }${ (redirectParam?.indexOf('?') !== -1) ? '&' : '?' }token=${ accessToken }`;\n                });\n            }\n          }\n        } catch (e) {}\n      }\n    };\n\n    if (parentApp &&\n        parentApp.active &&\n        !parentApp.needsUpdating &&\n        dependencyPlugsAreActive &&\n        dependencyToolsAreEnabled) {\n      buildRedirect(parentApp);\n      return;\n    }\n\n    const attemptedSetup = sessionStorage.getItem('attempted_setup');\n\n    if (parentApp && parentApp.enabled && attemptedSetup) {\n      const session = JSON.parse(attemptedSetup) as {applicationId: string, date: string};\n\n      if ((session.applicationId === parentApp.application.id) && isFuture(parseISO(session.date))) {\n        buildRedirect(parentApp);\n        return;\n      }\n    }\n  }, [parentApp, dependencyApps, dependencyPlugsAreActive, dependencyToolsAreEnabled]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginBuildRedirect;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HatApplication } from \"@dataswift/hat-js/lib/interfaces/hat-application.interface\";\nimport { HatClientService } from \"../../services/HatClientService\";\nimport {\n  selectDependencyApps,\n  selectDependencyPlugsAreActive,\n  selectParentApp\n} from \"../hmi/hmiSlice\";\nimport * as queryString from \"query-string\";\nimport { addMinutes, isFuture, parseISO } from \"date-fns\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  dependencies?: string;\n}\n\nconst HatLoginSetupDependency: React.FC<Props> = props => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const plugsAreActive = useSelector(selectDependencyPlugsAreActive);\n\n  useEffect(() => {\n    const { application_id, name, redirect_uri, redirect, dependencies } =\n        queryString.parse(window.location.search) as Query;\n\n    const setupAppDependencies = async (dependencies: HatApplication[]) => {\n      const app = dependencies.filter(d => !d.active)[0];\n      const callback = intermediateCallBackUrl(app.application.id);\n\n      try {\n        const hatSvc = HatClientService.getInstance();\n\n        if (app?.application.id) {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            const attemptedSetup = {\n              applicationId: parentApp?.application.id,\n              date: addMinutes(new Date(), 10)\n            };\n\n            sessionStorage.setItem('attempted_setup', JSON.stringify(attemptedSetup));\n\n            // eslint-disable-next-line max-len\n            window.location.href = `${ app.application.setup.url }?token=${ resAppLogin.parsedBody.accessToken }&redirect=${ callback }`;\n          }\n        }\n      } catch (e) {\n        console.log('Setup dependencies errored', e);\n      }\n    };\n\n    const intermediateCallBackUrl = (appId?: string): string => {\n      let url = window.location.href.split('?')[0];\n      const applicationId = application_id || name;\n      const applicationIdSafe = applicationId?.toLowerCase();\n      const redirectParam = redirect_uri || redirect;\n      const dependenciesParam = dependencies;\n\n      url += `?application_id=${ applicationIdSafe }%26redirect_uri=${ redirectParam }`;\n\n      if (dependenciesParam) {\n        // removes the application id from the dependency parameter\n        const dependencyArray = dependenciesParam.split(',').filter(item => item !== appId);\n        if (dependencyArray && dependencyArray.length > 0) {\n          url += `%26dependencies=${ dependencyArray.join() }`;\n        }\n      } else {\n        if (dependencyApps) {\n          const dependencyArray = dependencyApps\n            .filter(app => app.application.id !== appId)\n            .map(app => app.application.id);\n          if (dependencyArray && dependencyArray.length > 0) {\n            url += `%26dependencies=${ dependencyArray.join() }`;\n          }\n        }\n      }\n\n      return url.replace('#', '%23');\n    };\n\n    const attemptedSetup = sessionStorage.getItem('attempted_setup');\n\n    if (parentApp && dependencyApps && dependencyApps.length > 0 && attemptedSetup) {\n      const session = JSON.parse(attemptedSetup) as {applicationId: string, date: string};\n\n      if ((session.applicationId === parentApp.application.id) && isFuture(parseISO(session.date))) {\n        return;\n      }\n    }\n\n    if (parentApp && parentApp.active && !plugsAreActive) {\n      setupAppDependencies(dependencyApps);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [parentApp, dependencyApps, plugsAreActive]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginSetupDependency;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDependencyApps, selectDependencyTools, selectParentApp } from \"../hmi/hmiSlice\";\nimport { LoadingSpinner } from \"../../components/LoadingSpinner/LoadingSpinner\";\nimport { HmiType, HmiV2 } from \"hmi\";\nimport { onTermsAgreed, onTermsDeclined, selectErrorMessage, setRedirectError } from \"../hat-login/hatLoginSlice\";\nimport { NotificationBanner } from \"../../components/banners/NotificationBanner/NotificationBanner\";\nimport { selectLanguage } from \"../language/languageSlice\";\n\nconst OauthPermissions: React.FC = () => {\n  const hatName = window.location.host;\n  const dispatch = useDispatch();\n  const language = useSelector(selectLanguage);\n  const parentApp = useSelector(selectParentApp);\n  const errorMessage = useSelector(selectErrorMessage);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const dependencyTools = useSelector(selectDependencyTools);\n\n  const redirectBack = () => {\n    dispatch(setRedirectError('hat_exception', 'enabling_application_failed'));\n  };\n\n  if ((!parentApp || (parentApp.active && !parentApp.needsUpdating)) || (parentApp.application.dependencies &&\n      parentApp.application.dependencies.plugs?.length !== dependencyApps.length) ||\n      (parentApp.application.dependencies &&\n          parentApp.application.dependencies.tools?.length !== dependencyTools.length)) {\n    return <LoadingSpinner loadingText={'Loading permissions...'}/>;\n  }\n\n  return (\n    <div>\n      <NotificationBanner type={'error'} display={!!errorMessage} fixed>\n        <div className={'hat-login-notification'}>\n          <p>\n            An error has occurred, please use the back button to return to the previous page <br />\n            and try confirming again. If this error persists please{' '}\n            <a href={'mailto:contact@dataswift.io'} className={'link-button'}>contact us</a>\n          </p>\n          <button className={'btn btn-accent'} onClick={() => redirectBack()}>Back</button>\n        </div>\n      </NotificationBanner>\n\n      <span className={'flex-spacer-small'} />\n      {parentApp &&\n      <HmiV2 hmiType={HmiType.login.daas}\n        parentApp={parentApp.application}\n        email={hatName}\n        language={language}\n        dependencyTools={dependencyTools.map(tool => tool.info.name)}\n        dependencyApps={dependencyApps.map(app => app.application)}\n        onApproved={() => dispatch(onTermsAgreed(parentApp?.application.id || ''))}\n        onRejected={() => dispatch(onTermsDeclined())}\n      />\n      }\n    </div>\n  );\n};\n\nexport default OauthPermissions;\n","import React from 'react';\nimport '../hat-login/HatLogin.scss';\nimport HatLoginParamValidation from '../hat-login/HatLoginParamValidation';\nimport HatLoginApplicationHandler from '../hat-login/HatApplicationHandler';\nimport HatLoginBuildRedirect from '../hat-login/HatLoginBuildRedirect';\nimport HatLoginSetupDependency from '../hat-login/HatLoginSetupDependency';\nimport HatLoginRedirectError from '../hat-login/HatLoginRedirectError';\nimport OauthPermissions from './OauthPermissions';\n\nconst Oauth: React.FC = () => {\n  return (\n    <HatLoginParamValidation>\n      <HatLoginApplicationHandler>\n        <HatLoginBuildRedirect>\n          <HatLoginSetupDependency>\n            <HatLoginRedirectError>\n              <OauthPermissions />\n            </HatLoginRedirectError>\n          </HatLoginSetupDependency>\n        </HatLoginBuildRedirect>\n      </HatLoginApplicationHandler>\n    </HatLoginParamValidation>\n  );\n};\n\nexport default Oauth;\n"],"sourceRoot":""}