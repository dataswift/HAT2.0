include "base.conf"

play.http.filters = "org.hatdex.hat.utils.Filters"
play.crypto.secret = "bZec@3mf>3`<kV;/dgNENjOTe2A4NLPJm6itz/v@7RaI6l<Z_DZ5<hl3U96/;dtR"
play.crypto.secret = ${?APPLICATION_SECRET}

hatServerProviderModule = "org.hatdex.hat.modules.HatTestServerProviderModule"
hatServerProviderModule = ${?HAT_SERVER_PROVIDER}

play.modules {
  enabled += "org.hatdex.hat.modules.SilhouetteModule"
//  enabled += "org.hatdex.hat.modules.HatServerProviderModule"
  enabled += ${hatServerProviderModule}
  enabled += "org.hatdex.hat.modules.FileManagerModule"
  enabled += "org.hatdex.hat.modules.DataMonitoringModule"

  disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
  disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"
}

play.http.errorHandler = "org.hatdex.hat.utils.ErrorHandler"

play.http.filters=org.hatdex.hat.utils.Filters

playguard {

  # the http header to use for the client IP address.
  # If not set, RequestHeader.remoteAddress will be used
  clientipheader = "X-Forwarded-For"

  filter {
    enabled = true
    global {
      bucket {
        size = 100
        rate = 100
      }
    }
    ip {
      bucket {
        size = 50
        rate = 50
      }
    }
  }
}

play.filters {

  cors {
    pathPrefixes = [
      "/users",
      "/data",
      "/dataDebit",
      "/system/update",
      "/api/profile",
      "/api/notables",
      "/api/v2"
    ]
    allowedOrigins = null
    allowedHttpHeaders = ["Accept",
      "Accept-Encoding",
      "Accept-Language",
      "Authorization",
      "Content-Type",
      "Host",
      "Origin",
      "Referer",
      "User-Agent",
      "X-Requested-With",
      "X-Auth-Token"]
    preflightMaxAge = 3 days

    # Enable support for Cordova and Electron Applications
    # ref https://github.com/playframework/playframework/issues/5193
    serveForbiddenOrigins = true
  }

  csrf.header.bypassHeaders {
    X-Requested-With = "*"
    Csrf-Token = "nocheck"
  }
}

play.cache.bindCaches = ["session-cache", "user-cache"]

hat-server-provider-actor-dispatcher {
  mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
}

hat {
  tls = false
  schemaMigrations = ["evolutions/hat-database-schema/13_liveEvolutions.sql", "evolutions/hat-database-schema/14_newHat.sql"]
}

frontend {
  protocol = "https:"
}

exchange {
  admin = ["systems@hatdex.org"]
  admin = [${?HAT_ADMIN_EMAIL}]
  address = "dex.hubofallthings.com"
  scheme = "https://"
  retryLimit = 10
  retryTime = 30 minutes
  batchSize = 20
  storage {
    collectionPeriod = 1 hour
  }
}

silhouette {
  authenticator.cookieName = "authenticator"
  authenticator.cookiePath = "/"
  authenticator.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie = false
  authenticator.useFingerprinting = true
  authenticator.authenticatorIdleTimeout = 3 days
  authenticator.authenticatorExpiry = 3 days

  authenticator.rememberMe.cookieMaxAge = 30 days
  authenticator.rememberMe.authenticatorIdleTimeout = 14 days
  authenticator.rememberMe.authenticatorExpiry = 30 days

  authenticator.cookie.signer.key = "[changeme]" // A unique encryption key
  authenticator.crypter.key = "[changeme]" // A unique encryption key

  authenticator.fieldName = "X-Auth-Token"
  authenticator.issuerClaim = "hat.org"
}

resourceManagement {
  serverProvisioningTimeout = 5 seconds
  serverIdleTimeout = 120 seconds
  serverIdleTimeout = ${?RESOURCE_MGMT_SERVER_IDLE_TIMEOUT}
  millinerAddress = "http://milliner.hat.org:9000"
  millinerAddress = ${?MILLINER_ADDRESS}
  hatSharedSecret = ""
  hatSharedSecret = ${?HAT_SHARED_SECRET}
}

storage {
  s3Configuration {
    bucketName = ""
    bucketName = ${?HAT_STORAGE_S3_BUCKET}
    accessKeyId = ""
    accessKeyId = ${?HAT_STORAGE_ACCESS_KEY_ID}
    region = "eu-west-1"
    region = ${?HAT_STORAGE_REGION}
    secretKey = ""
    secretKey = ${?HAT_STORAGE_SECRET_KEY}
    signedUrlExpiry = 5 minutes
  }
}

devdb = {
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  properties = {
    databaseName = "testhatdb1"
    user = "testhatdb1"
    password = ""
  }
  numThreads = 3
}



#include "activeHats.conf"
