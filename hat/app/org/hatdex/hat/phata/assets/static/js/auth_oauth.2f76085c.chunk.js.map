{"version":3,"sources":["components/banners/NotificationBanner/NotificationBanner.tsx","features/hat-login/HatLoginParamValidation.tsx","features/hat-login/HatLoginRedirectError.tsx","features/hat-login/HatApplicationHandler.tsx","features/hat-login/HatLoginBuildRedirect.tsx","features/hat-login/HatLoginSetupDependency.tsx","../node_modules/date-fns/esm/addMinutes/index.js","../node_modules/date-fns/esm/constants/index.js","../node_modules/date-fns/esm/parseISO/index.js","features/oauth/OauthPermissions.tsx","features/hat-login/helpers.ts","features/oauth/Oauth.tsx"],"names":["NotificationBanner","type","children","fixed","display","className","HatLoginParamValidation","props","dispatch","useDispatch","useEffect","queryString","window","location","search","application_id","name","redirect_uri","redirect","applicationId","applicationIdSafe","toLowerCase","getApplicationsHmi","setRedirectError","HatLoginRedirectError","useState","redirectNotProvided","setRedirectNotProvided","redirectError","useSelector","selectRedirectError","fallback","internal","error","isInternal","redirectWithError","errorReason","redirectParam","replace","callBackUrlWithError","href","RedirectError","environment","sandbox","target","rel","HatLoginApplicationHandler","errorMessage","selectErrorMessage","applications","selectApplications","parentApp","selectParentApp","tools","selectTools","length","find","app","application","id","indexOf","kind","parentPlugDependencies","dependencies","plugs","parentToolDependencies","setParentApp","setDependencyApps","filter","getTools","setDependencyTools","tool","onClick","HatLoginBuildRedirect","dependencyApps","selectDependencyApps","dependencyPlugsAreActive","selectDependencyPlugsAreActive","dependencyToolsAreEnabled","selectDependencyToolsEnabled","buildRedirect","a","redirectParamDecoded","decodeURIComponent","hatSvc","HatClientService","getInstance","appLogin","resAppLogin","parsedBody","accessToken","setup","isRedirectUrlValid","validRedirectUris","includes","attemptedSetup","date","addMinutes","Date","sessionStorage","setItem","JSON","stringify","isDataswiftWebsite","paramTokem","url","origin","console","warn","sendReport","then","catch","active","needsUpdating","getItem","enabled","session","parse","isFuture","parseISO","HatLoginSetupDependency","plugsAreActive","setupAppDependencies","d","callback","intermediateCallBackUrl","log","appId","split","dependenciesParam","dependencyArray","item","join","map","dirtyDate","dirtyAmount","requiredArgs","arguments","amount","toInteger","addMilliseconds","Math","pow","millisecondsInHour","argument","dirtyOptions","options","additionalDigits","RangeError","Object","prototype","toString","call","NaN","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","getTime","offset","timestamp","time","parseTime","timezone","result","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","patterns","dateTimeDelimiter","timeZoneDelimiter","dateRegex","timeRegex","timezoneRegex","dateString","timeString","array","test","substr","token","exec","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","value","hours","parseTimeUnit","minutes","seconds","validateTime","parseFloat","timezoneString","sign","_hours","validateTimezone","OauthPermissions","hatName","host","language","selectLanguage","dependencyTools","selectDependencyTools","dependencyPlugs","isParentAppActive","hasPlugDependencies","hasToolDependencies","foundDependencyPlugs","isDependencyPlugsReady","foundDependencyTools","t","isDependencyToolsReady","isHmiLoading","LoadingSpinner","loadingText","email","info","onApproved","onTermsAgreed","onRejected","onTermsDeclined","Oauth"],"mappings":"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","file":"static/js/auth_oauth.2f76085c.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport './NotificationBanner.scss';\n\ntype Props = {\n  type: string;\n  display: boolean;\n  children: ReactNode;\n  fixed?: boolean;\n}\n\nexport const NotificationBanner: React.FC<Props> = ({ type, children, fixed, display }) => {\n  return (\n    <div>\n      {display && (\n        <>\n          <div className={\n            `notification-banner-container \n            notification-banner-container-${ type } \n            ${ fixed ? 'notification-fixed' : null }`\n          }>\n            {type === 'error' && (\n              <i className=\"material-icons notification-banner-container-icon\">warning</i>\n            )}\n            {children}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { getApplicationsHmi } from \"../applications/applicationsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { setRedirectError } from \"./hatLoginSlice\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n}\n\nconst HatLoginParamValidation: React.FC<Props> = props => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { application_id, name, redirect_uri, redirect } =\n        queryString.parse(window.location.search) as Query;\n    const applicationId = application_id || name;\n    const applicationIdSafe = applicationId?.toLowerCase();\n    const redirectParam = redirect_uri || redirect;\n\n    if (!redirectParam) {\n      dispatch(setRedirectError('application_misconfigured', 'redirect_is_required '));\n      return;\n    }\n\n    if (!applicationIdSafe) {\n      dispatch(setRedirectError('application_misconfigured', 'application_id_is_required '));\n      return;\n    }\n\n    dispatch(getApplicationsHmi(applicationIdSafe));\n  }, [dispatch]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginParamValidation;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRedirectError } from \"./hatLoginSlice\";\nimport { environment } from \"../../environment\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n}\n\nconst HatLoginRedirectError: React.FC<Props> = props => {\n  const [redirectNotProvided, setRedirectNotProvided] = useState(false);\n  const redirectError = useSelector(selectRedirectError);\n\n  useEffect(() => {\n    const { redirect_uri, redirect, fallback, internal } = queryString.parse(window.location.search) as Query;\n\n    const callBackUrlWithError = (error: string, errorReason: string): string | null => {\n      const redirectParam = redirect_uri || redirect;\n\n      if (fallback) {\n        return fallback;\n      }\n\n      if (redirectParam) {\n        const url = `${ redirectParam }?error=${ error }%26error_reason=${ errorReason }`;\n\n        return url.replace('#', '%23');\n      } else {\n        return null;\n      }\n    };\n\n    if (redirectError && redirectError.error) {\n      const isInternal = internal === 'true';\n\n      const redirectWithError = callBackUrlWithError(redirectError.error, redirectError.errorReason);\n\n      if (!redirectWithError) {\n        setRedirectNotProvided(true);\n        return;\n      }\n\n      if (isInternal) {\n        window.location.href = fallback || redirectWithError;\n      } else {\n        window.location.href = redirectWithError;\n      }\n    }\n  }, [redirectError]);\n\n  const RedirectError = () => {\n    if (environment.sandbox) {\n      return (<div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Ooops... Looks like something went wrong.</h3>\n          <p className=\"app-error-text\">\n                ERROR: App details incorrect. \"redirect_uri\" query parameter is missing. <br />\n            <a href={'https://docs.dataswift.io/guides/hat-login/02-send-hat-login'}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                  Learn more\n            </a>\n          </p>\n        </div>\n      </div>\n      );\n    } else {\n      return (<div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Ooops... Looks like something went wrong.</h3>\n          <p className=\"app-error-text\">\n            ERROR: App details incorrect. Please contact the app developer and let them know.\n          </p>\n        </div>\n      </div>\n      );\n    }\n  };\n\n  return <>{redirectNotProvided ? <RedirectError /> : props.children}</>;\n};\n\nexport default HatLoginRedirectError;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectApplications } from \"../applications/applicationsSlice\";\nimport { selectErrorMessage, setRedirectError } from \"./hatLoginSlice\";\nimport { selectParentApp, setDependencyApps, setDependencyTools, setParentApp } from \"../hmi/hmiSlice\";\nimport { getTools, selectTools } from \"../tools/toolsSlice\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n}\n\nconst HatLoginApplicationHandler: React.FC<Props> = props => {\n  const errorMessage = useSelector(selectErrorMessage);\n  const applications = useSelector(selectApplications);\n  const parentApp = useSelector(selectParentApp);\n  const tools = useSelector(selectTools);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (applications && applications.length > 0) {\n      const { application_id, name } = queryString.parse(window.location.search) as Query;\n\n      const applicationId = application_id || name;\n      const applicationIdSafe = applicationId?.toLowerCase();\n      const parentApp = applications.find(app => app.application.id === applicationIdSafe);\n\n      if (!parentApp || (['App', 'DataPlug'].indexOf(parentApp.application.kind.kind) === -1)) {\n        dispatch(setRedirectError('application_misconfigured', 'application_id_not_found '));\n        return;\n      }\n\n      const parentPlugDependencies = parentApp.application.dependencies?.plugs || [];\n      const parentToolDependencies = parentApp.application.dependencies?.tools || [];\n\n      dispatch(setParentApp(parentApp));\n      dispatch(setDependencyApps(applications.filter(app => parentPlugDependencies.indexOf(app.application.id) > -1)));\n\n      if (parentToolDependencies.length > 0) {\n        dispatch(getTools());\n      }\n    }\n\n  }, [applications, dispatch]);\n\n  useEffect(() => {\n    if (tools && tools.length > 0) {\n      if (!parentApp) return;\n\n      const parentToolDependencies = parentApp.application.dependencies?.tools || [];\n\n      dispatch(setDependencyTools(tools.filter(tool => parentToolDependencies.indexOf(tool.id) !== -1)));\n    }\n  }, [parentApp, tools, dispatch]);\n\n  const redirectBack = () => {\n    dispatch(setRedirectError('hat_exception', 'internal_server_error'));\n  };\n\n  if (errorMessage && applications.length === 0) {\n    return (\n      <div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Looks like something went wrong</h3>\n          <p className=\"app-error-text\">{errorMessage}</p>\n          <button className={'btn btn-accent'}\n            onClick={() => redirectBack()}>\n            Back\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginApplicationHandler;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { HatApplication } from '@dataswift/hat-js/lib/interfaces/hat-application.interface';\nimport { HatClientService } from '../../services/HatClientService';\nimport {\n  selectDependencyApps,\n  selectDependencyPlugsAreActive,\n  selectDependencyToolsEnabled,\n  selectParentApp,\n} from '../hmi/hmiSlice';\nimport * as queryString from 'query-string';\nimport { addMinutes, isFuture, parseISO } from 'date-fns';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n};\n\nconst HatLoginBuildRedirect: React.FC<Props> = (props) => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const dependencyPlugsAreActive = useSelector(selectDependencyPlugsAreActive);\n  const dependencyToolsAreEnabled = useSelector(selectDependencyToolsEnabled);\n\n  useEffect(() => {\n    const buildRedirect = async (app: HatApplication) => {\n      const { redirect_uri, redirect, internal } = queryString.parse(window.location.search) as Query;\n\n      const isInternal = internal === 'true';\n      const redirectParam = redirect_uri || redirect;\n      const redirectParamDecoded = decodeURIComponent(redirectParam || '');\n\n      if (isInternal) {\n        window.location.href = redirectParam || '';\n      } else {\n        const hatSvc = HatClientService.getInstance();\n\n        try {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            const { accessToken } = resAppLogin.parsedBody;\n            const setup = app.application.setup;\n\n            const isRedirectUrlValid = setup.validRedirectUris.includes(redirectParamDecoded);\n\n            const attemptedSetup = {\n              applicationId: app.application.id,\n              date: addMinutes(new Date(), 10),\n            };\n\n            sessionStorage.setItem('attempted_setup', JSON.stringify(attemptedSetup));\n\n            // This is a hack and ideally should be removed. This is what allows the log in via dataswift.io webpage,\n            // without this check users are redirected back to the dataswift.io page with the token attached.\n            // The problem is that the dataswift.io page has no idea what to do with the token and\n            // users are stuck there. With this hack users are being redirected\n            // back to their PDA Dashboard which is the intended behaviour.\n            const isDataswiftWebsite = redirectParamDecoded?.includes('www.dataswift.io/sign-up-login');\n\n            const paramTokem = redirectParam?.includes('?') ? '&' : '?';\n\n            const url = isDataswiftWebsite\n              ? window.location.origin + '/feed'\n              : `${redirectParam?.replace('#', '%23')}${paramTokem}token=${accessToken}`;\n\n            if (isRedirectUrlValid) {\n              // eslint-disable-next-line max-len\n              window.location.href = url;\n            } else {\n              console.warn('Provided URL is not registered');\n\n              hatSvc\n                .sendReport('hmi_invalid_redirect_url', `${app.application.id}: ${redirectParam}`)\n                .then(() => {\n                  window.location.href = url;\n                })\n                .catch(() => {\n                  window.location.href = url;\n                });\n            }\n          }\n        } catch (e) {}\n      }\n    };\n\n    if (\n      parentApp &&\n      parentApp.active &&\n      !parentApp.needsUpdating &&\n      dependencyPlugsAreActive &&\n      dependencyToolsAreEnabled\n    ) {\n      buildRedirect(parentApp);\n      return;\n    }\n\n    const attemptedSetup = sessionStorage.getItem('attempted_setup');\n\n    if (parentApp && parentApp.enabled && attemptedSetup) {\n      const session = JSON.parse(attemptedSetup) as { applicationId: string; date: string };\n\n      if (session.applicationId === parentApp.application.id && isFuture(parseISO(session.date))) {\n        buildRedirect(parentApp);\n        return;\n      }\n    }\n  }, [parentApp, dependencyApps, dependencyPlugsAreActive, dependencyToolsAreEnabled]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginBuildRedirect;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HatApplication } from \"@dataswift/hat-js/lib/interfaces/hat-application.interface\";\nimport { HatClientService } from \"../../services/HatClientService\";\nimport {\n  selectDependencyApps,\n  selectDependencyPlugsAreActive,\n  selectParentApp\n} from \"../hmi/hmiSlice\";\nimport * as queryString from \"query-string\";\nimport { addMinutes, isFuture, parseISO } from \"date-fns\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  dependencies?: string;\n}\n\nconst HatLoginSetupDependency: React.FC<Props> = props => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const plugsAreActive = useSelector(selectDependencyPlugsAreActive);\n\n  useEffect(() => {\n    const { application_id, name, redirect_uri, redirect, dependencies } =\n        queryString.parse(window.location.search) as Query;\n\n    const setupAppDependencies = async (dependencies: HatApplication[]) => {\n      const app = dependencies.filter(d => !d.active)[0];\n      const callback = intermediateCallBackUrl(app.application.id);\n\n      try {\n        const hatSvc = HatClientService.getInstance();\n\n        if (app?.application.id) {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            const attemptedSetup = {\n              applicationId: parentApp?.application.id,\n              date: addMinutes(new Date(), 10)\n            };\n\n            sessionStorage.setItem('attempted_setup', JSON.stringify(attemptedSetup));\n\n            // eslint-disable-next-line max-len\n            window.location.href = `${ app.application.setup.url }?token=${ resAppLogin.parsedBody.accessToken }&redirect=${ callback }`;\n          }\n        }\n      } catch (e) {\n        console.log('Setup dependencies errored', e);\n      }\n    };\n\n    const intermediateCallBackUrl = (appId?: string): string => {\n      let url = window.location.href.split('?')[0];\n      const applicationId = application_id || name;\n      const applicationIdSafe = applicationId?.toLowerCase();\n      const redirectParam = redirect_uri || redirect;\n      const dependenciesParam = dependencies;\n\n      url += `?application_id=${ applicationIdSafe }%26redirect_uri=${ redirectParam }`;\n\n      if (dependenciesParam) {\n        // removes the application id from the dependency parameter\n        const dependencyArray = dependenciesParam.split(',').filter(item => item !== appId);\n        if (dependencyArray && dependencyArray.length > 0) {\n          url += `%26dependencies=${ dependencyArray.join() }`;\n        }\n      } else {\n        if (dependencyApps) {\n          const dependencyArray = dependencyApps\n            .filter(app => app.application.id !== appId)\n            .map(app => app.application.id);\n          if (dependencyArray && dependencyArray.length > 0) {\n            url += `%26dependencies=${ dependencyArray.join() }`;\n          }\n        }\n      }\n\n      return url.replace('#', '%23');\n    };\n\n    const attemptedSetup = sessionStorage.getItem('attempted_setup');\n\n    if (parentApp && dependencyApps && dependencyApps.length > 0 && attemptedSetup) {\n      const session = JSON.parse(attemptedSetup) as {applicationId: string, date: string};\n\n      if ((session.applicationId === parentApp.application.id) && isFuture(parseISO(session.date))) {\n        return;\n      }\n    }\n\n    if (parentApp && parentApp.active && !plugsAreActive) {\n      setupAppDependencies(dependencyApps);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [parentApp, dependencyApps, plugsAreActive]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginSetupDependency;\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDependencyApps, selectDependencyTools, selectParentApp } from \"../hmi/hmiSlice\";\nimport { LoadingSpinner } from \"../../components/LoadingSpinner/LoadingSpinner\";\nimport { Hmi } from \"hmi\";\nimport { onTermsAgreed, onTermsDeclined, selectErrorMessage, setRedirectError } from \"../hat-login/hatLoginSlice\";\nimport { NotificationBanner } from \"../../components/banners/NotificationBanner/NotificationBanner\";\nimport { selectLanguage } from \"../language/languageSlice\";\nimport { isHmiLoading } from \"../hat-login/helpers\";\n\nconst OauthPermissions: React.FC = () => {\n  const hatName = window.location.host;\n  const dispatch = useDispatch();\n  const language = useSelector(selectLanguage);\n  const parentApp = useSelector(selectParentApp);\n  const errorMessage = useSelector(selectErrorMessage);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const dependencyTools = useSelector(selectDependencyTools);\n\n  const redirectBack = () => {\n    dispatch(setRedirectError('hat_exception', 'enabling_application_failed'));\n  };\n\n  if (!parentApp || isHmiLoading(parentApp, dependencyApps, dependencyTools)) {\n    return <LoadingSpinner loadingText={'Loading permissions...'}/>;\n  }\n\n  return (\n    <div>\n      <NotificationBanner type={'error'} display={!!errorMessage} fixed>\n        <div className={'hat-login-notification'}>\n          <p>\n            An error has occurred, please use the back button to return to the previous page <br />\n            and try confirming again. If this error persists please{' '}\n            <a href={'mailto:contact@dataswift.io'} className={'link-button'}>contact us</a>\n          </p>\n          <button className={'btn btn-accent'} onClick={() => redirectBack()}>Back</button>\n        </div>\n      </NotificationBanner>\n\n      <span className={'flex-spacer-small'} />\n      {parentApp &&\n      <Hmi\n        parentApp={parentApp.application}\n        email={hatName}\n        language={language}\n        dependencyTools={dependencyTools.map(tool => tool.info.name)}\n        dependencyApps={dependencyApps.map(app => app.application)}\n        onApproved={() => dispatch(onTermsAgreed(parentApp?.application.id || ''))}\n        onRejected={() => dispatch(onTermsDeclined())}\n      />\n      }\n    </div>\n  );\n};\n\nexport default OauthPermissions;\n","import { HatApplication } from \"@dataswift/hat-js/lib/interfaces/hat-application.interface\";\nimport { HatTool } from \"../tools/hat-tool.interface\";\n\nexport const isHmiLoading = (app: HatApplication, dependencyPlugs?: HatApplication[], dependencyTools?: HatTool[]) => {\n  // In case an app is active and doesn't need updating, we need to display the loading screen to the user.\n  const isParentAppActive = app.active && !app.needsUpdating;\n\n  // Check if the app has 1 or more plug dependencies.\n  const hasPlugDependencies = app.application.dependencies && app.application.dependencies?.plugs.length > 0;\n  // Check if the app has 1 or more tool dependencies.\n  const hasToolDependencies = app.application.dependencies && app.application.dependencies?.tools.length > 0;\n\n  // Search for the app's dependency plugs and if they are currently available.\n  const foundDependencyPlugs =\n      dependencyPlugs?.filter(a => app.application.dependencies?.plugs?.indexOf(a.application.id) !== -1);\n\n  // Check if the data plugs and app's dependency plugs are ready.\n  const isDependencyPlugsReady = app.application.dependencies?.plugs &&\n      foundDependencyPlugs?.length ===  app.application.dependencies?.plugs.length;\n\n  // Search for the app's dependency tools and if they are currently available.\n  const foundDependencyTools =\n      dependencyTools?.filter(t => app.application.dependencies?.tools?.indexOf(t.id) !== -1);\n\n  // Check if the tools and app's dependency tools are ready.\n  const isDependencyToolsReady = app.application.dependencies?.tools &&\n      foundDependencyTools?.length ===  app.application.dependencies?.tools.length;\n\n  return (\n    isParentAppActive ||\n    (hasPlugDependencies && !isDependencyPlugsReady) ||\n    (hasToolDependencies && !isDependencyToolsReady)\n  );\n};\n","import React from 'react';\nimport '../hat-login/HatLogin.scss';\nimport HatLoginParamValidation from '../hat-login/HatLoginParamValidation';\nimport HatLoginApplicationHandler from '../hat-login/HatApplicationHandler';\nimport HatLoginBuildRedirect from '../hat-login/HatLoginBuildRedirect';\nimport HatLoginSetupDependency from '../hat-login/HatLoginSetupDependency';\nimport HatLoginRedirectError from '../hat-login/HatLoginRedirectError';\nimport OauthPermissions from './OauthPermissions';\n\nconst Oauth: React.FC = () => {\n  return (\n    <HatLoginParamValidation>\n      <HatLoginApplicationHandler>\n        <HatLoginBuildRedirect>\n          <HatLoginSetupDependency>\n            <HatLoginRedirectError>\n              <OauthPermissions />\n            </HatLoginRedirectError>\n          </HatLoginSetupDependency>\n        </HatLoginBuildRedirect>\n      </HatLoginApplicationHandler>\n    </HatLoginParamValidation>\n  );\n};\n\nexport default Oauth;\n"],"sourceRoot":""}