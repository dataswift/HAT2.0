{"version":3,"sources":["features/applications/ApplicationDetails.tsx"],"names":["HatApplicationDetails","dispatch","useDispatch","history","useHistory","appId","useParams","app","useSelector","selectApplicationById","useEffect","getApplicationById","logoSrc","application","info","graphics","logo","normal","logoAltText","toolbarActions","setup","id","backgroundColor","primaryColor","className","rating","score","name","href","onClick","redirectRumpel","window","location","push","getAppStatus","getStatusIcon","getStatusButtonText","header","description","text","screenshots","map","screenshot","informationListData","getApplicationDetails"],"mappings":"oHAAA,iGAwEeA,UA5DyB,WACtC,IAAMC,EAAWC,cACXC,EAAUC,cACRC,EAAUC,cAAVD,MACFE,EAAMC,YAAYC,YAAsBJ,IAM9C,GAJAK,qBAAU,WACHH,GAAKN,EAASU,YAAmBN,MACrC,CAACJ,EAAUM,EAAKF,KAEdE,EAAK,OAAO,KAYjB,OACE,qCACE,eAAC,IAAD,CACEK,QAASL,EAAIM,YAAYC,KAAKC,SAASC,KAAKC,OAC5CC,YAAY,uBACZC,eAAgB,cAAC,IAAD,CAA0BC,MAAOb,EAAIa,MAAOf,MAAOE,EAAIM,YAAYQ,KACnFC,gBAAiBf,EAAIM,YAAYC,KAAKS,aAJxC,UAME,qBAAKC,UAAU,qBAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAMA,UAAU,yBAAhB,SAA0CjB,EAAIM,YAAYC,KAAKW,OAAOC,YAI1E,oBAAIF,UAAU,2BAAd,SAA0CjB,EAAIM,YAAYC,KAAKa,OAC/D,sBAAKH,UAAU,8BAAf,UACE,cAAC,IAAD,CAAeH,GAAG,qCADpB,IAC2Dd,EAAIM,YAAYC,KAAKW,OAAOC,SAGvF,mBAAGE,KAAK,sEAAsEJ,UAAU,WAAxF,SACE,cAAC,IAAD,CAAeH,GAAG,uCAGpB,sBAAKQ,QAjCc,WACvB,IAAQR,EAAOd,EAAIM,YAAXQ,GACFS,EAAiBC,OAAOC,SAASJ,KAEvCzB,EAAQ8B,KACN,wCACoBZ,EADpB,qBACmCS,EADnC,yBACkEA,EADlE,oBA4BkCN,UAAS,6BAAwBU,YAAa3B,GAArC,gBAAzC,UACE,mBAAGiB,UAAU,qCAAb,SAAmDW,YAAc5B,KAChE6B,YAAoB7B,SAGzB,cAAC,IAAD,CACE8B,OAAQ,WACRC,YAAa/B,EAAIM,YAAYC,KAAKwB,YAAYC,KAC9CC,YAAajC,EAAIM,YAAYC,KAAKC,SAASyB,YAAYC,KAAI,SAACC,GAAD,OAAgBA,EAAWzB,UACtF0B,oBAAqBC,YAAsBrC","file":"static/js/hat_application_details.f2aafbc1.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport DetailsHeader from '../../components/headers/DetailsHeader/DetailsHeader';\nimport FormatMessage from '../messages/FormatMessage';\nimport { getApplicationById, selectApplicationById } from './applicationsSlice';\nimport './HatApplication.scss';\nimport { getStatusIcon, getAppStatus, getApplicationDetails, getStatusButtonText } from './helper';\nimport InformationDetails from '../../components/InformationDetails/InformationDetails';\nimport AppDetailsToolbarActions from './ApplicationDetailsActions';\n\nconst HatApplicationDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { appId } = useParams<{ appId: string }>();\n  const app = useSelector(selectApplicationById(appId));\n\n  useEffect(() => {\n    if (!app) dispatch(getApplicationById(appId));\n  }, [dispatch, app, appId]);\n\n  if (!app) return null;\n\n  const onAppStatusClick = () => {\n    const { id } = app.application;\n    const redirectRumpel = window.location.href;\n\n    history.push(\n      `/auth/oauth?` +\n        `application_id=${id}&fallback=${redirectRumpel}&redirect_uri=${redirectRumpel}&internal=true`,\n    );\n  };\n\n  return (\n    <>\n      <DetailsHeader\n        logoSrc={app.application.info.graphics.logo.normal}\n        logoAltText=\"HAT Application Logo\"\n        toolbarActions={<AppDetailsToolbarActions setup={app.setup} appId={app.application.id} />}\n        backgroundColor={app.application.info.primaryColor}\n      >\n        <div className=\"app-rating-wrapper\">\n          <div className=\"app-rating\">\n            <span className=\"app-rating-highlighted\">{app.application.info.rating.score}</span>\n          </div>\n        </div>\n\n        <h3 className=\"app-details-header-title\">{app.application.info.name}</h3>\n        <div className=\"app-details-header-headline\">\n          <FormatMessage id=\"ds.hat.application.details.rated\" /> {app.application.info.rating.score}\n        </div>\n\n        <a href=\"https://docs.dataswift.io/deploy/rating-assurance-and-certification\" className=\"app-link\">\n          <FormatMessage id=\"ds.hat.application.details.learn\" />\n        </a>\n\n        <div onClick={onAppStatusClick} className={`app-details-status ${getAppStatus(app)} link-button`}>\n          <i className=\"material-icons details-button-icon\">{getStatusIcon(app)}</i>\n          {getStatusButtonText(app)}\n        </div>\n      </DetailsHeader>\n      <InformationDetails\n        header={'App Info'}\n        description={app.application.info.description.text}\n        screenshots={app.application.info.graphics.screenshots.map((screenshot) => screenshot.normal)}\n        informationListData={getApplicationDetails(app)}\n      />\n    </>\n  );\n};\n\nexport default HatApplicationDetails;\n"],"sourceRoot":""}