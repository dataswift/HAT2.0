{"version":3,"sources":["components/banners/NotificationBanner/NotificationBanner.tsx","features/hat-login/HatLoginParamValidation.tsx","features/hat-login/HatLoginRedirectError.tsx","features/hat-login/HatApplicationHandler.tsx","features/hat-login/HatLoginBuildRedirect.tsx","features/hat-login/HatLoginSetupDependency.tsx","features/hmi/hmi.config.ts","features/hat-login/UpdateNotes/UpdateNotes.tsx","features/hat-login/HatLoginHmi.tsx","features/hat-login/HatLogin.tsx"],"names":["NotificationBanner","type","children","fixed","display","className","HatLoginParamValidation","props","dispatch","useDispatch","useEffect","queryString","window","location","search","application_id","name","redirect_uri","redirect","applicationId","applicationIdSafe","toLowerCase","getApplicationsHmi","setRedirectError","HatLoginRedirectError","useState","redirectNotProvided","setRedirectNotProvided","redirectError","useSelector","selectRedirectError","fallback","internal","error","isInternal","redirectWithError","errorReason","redirectParam","replace","callBackUrlWithError","href","RedirectError","environment","sandbox","target","rel","HatLoginApplicationHandler","errorMessage","selectErrorMessage","applications","selectApplications","parentApp","selectParentApp","tools","selectTools","length","find","app","application","id","indexOf","kind","parentPlugDependencies","dependencies","plugs","parentToolDependencies","setParentApp","setDependencyApps","filter","getTools","setDependencyTools","tool","onClick","HatLoginBuildRedirect","dependencyApps","selectDependencyApps","dependencyPlugsAreActive","selectDependencyPlugsAreActive","dependencyToolsAreEnabled","selectDependencyToolsEnabled","buildRedirect","a","redirectParamDecoded","decodeURIComponent","hatSvc","HatClientService","getInstance","appLogin","resAppLogin","parsedBody","accessToken","setup","isRedirectUrlValid","validRedirectUris","includes","attemptedSetup","date","addMinutes","Date","sessionStorage","setItem","JSON","stringify","isDataswiftWebsite","paramTokem","url","origin","console","warn","sendReport","then","catch","active","needsUpdating","getItem","enabled","session","parse","isFuture","parseISO","HatLoginSetupDependency","plugsAreActive","setupAppDependencies","d","callback","intermediateCallBackUrl","log","appId","split","dependenciesParam","dependencyArray","item","join","map","hmiConfig","hatdexRating","termsOfService","privacyPolicy","UpdateNotes","onApproved","onRejected","info","updateNotes","HmiActions","FormatMessage","version","src","graphics","logo","normal","height","width","alt","rating","score","header","notes","note","index","HatLoginHmi","hatName","host","language","selectLanguage","dependencyTools","selectDependencyTools","LoadingSpinner","loadingText","onTermsAgreed","onTermsDeclined","email","HatLogin"],"mappings":"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","file":"static/js/hat_setup_login.c89fe2c0.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport './NotificationBanner.scss';\n\ntype Props = {\n  type: string;\n  display: boolean;\n  children: ReactNode;\n  fixed?: boolean;\n}\n\nexport const NotificationBanner: React.FC<Props> = ({ type, children, fixed, display }) => {\n  return (\n    <div>\n      {display && (\n        <>\n          <div className={\n            `notification-banner-container \n            notification-banner-container-${ type } \n            ${ fixed ? 'notification-fixed' : null }`\n          }>\n            {type === 'error' && (\n              <i className=\"material-icons notification-banner-container-icon\">warning</i>\n            )}\n            {children}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { getApplicationsHmi } from \"../applications/applicationsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { setRedirectError } from \"./hatLoginSlice\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n}\n\nconst HatLoginParamValidation: React.FC<Props> = props => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { application_id, name, redirect_uri, redirect } =\n        queryString.parse(window.location.search) as Query;\n    const applicationId = application_id || name;\n    const applicationIdSafe = applicationId?.toLowerCase();\n    const redirectParam = redirect_uri || redirect;\n\n    if (!redirectParam) {\n      dispatch(setRedirectError('application_misconfigured', 'redirect_is_required '));\n      return;\n    }\n\n    if (!applicationIdSafe) {\n      dispatch(setRedirectError('application_misconfigured', 'application_id_is_required '));\n      return;\n    }\n\n    dispatch(getApplicationsHmi(applicationIdSafe));\n  }, [dispatch]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginParamValidation;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRedirectError } from \"./hatLoginSlice\";\nimport { environment } from \"../../environment\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n}\n\nconst HatLoginRedirectError: React.FC<Props> = props => {\n  const [redirectNotProvided, setRedirectNotProvided] = useState(false);\n  const redirectError = useSelector(selectRedirectError);\n\n  useEffect(() => {\n    const { redirect_uri, redirect, fallback, internal } = queryString.parse(window.location.search) as Query;\n\n    const callBackUrlWithError = (error: string, errorReason: string): string | null => {\n      const redirectParam = redirect_uri || redirect;\n\n      if (fallback) {\n        return fallback;\n      }\n\n      if (redirectParam) {\n        const url = `${ redirectParam }?error=${ error }%26error_reason=${ errorReason }`;\n\n        return url.replace('#', '%23');\n      } else {\n        return null;\n      }\n    };\n\n    if (redirectError && redirectError.error) {\n      const isInternal = internal === 'true';\n\n      const redirectWithError = callBackUrlWithError(redirectError.error, redirectError.errorReason);\n\n      if (!redirectWithError) {\n        setRedirectNotProvided(true);\n        return;\n      }\n\n      if (isInternal) {\n        window.location.href = fallback || redirectWithError;\n      } else {\n        window.location.href = redirectWithError;\n      }\n    }\n  }, [redirectError]);\n\n  const RedirectError = () => {\n    if (environment.sandbox) {\n      return (<div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Ooops... Looks like something went wrong.</h3>\n          <p className=\"app-error-text\">\n                ERROR: App details incorrect. \"redirect_uri\" query parameter is missing. <br />\n            <a href={'https://docs.dataswift.io/guides/hat-login/02-send-hat-login'}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                  Learn more\n            </a>\n          </p>\n        </div>\n      </div>\n      );\n    } else {\n      return (<div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Ooops... Looks like something went wrong.</h3>\n          <p className=\"app-error-text\">\n            ERROR: App details incorrect. Please contact the app developer and let them know.\n          </p>\n        </div>\n      </div>\n      );\n    }\n  };\n\n  return <>{redirectNotProvided ? <RedirectError /> : props.children}</>;\n};\n\nexport default HatLoginRedirectError;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectApplications } from \"../applications/applicationsSlice\";\nimport { selectErrorMessage, setRedirectError } from \"./hatLoginSlice\";\nimport { selectParentApp, setDependencyApps, setDependencyTools, setParentApp } from \"../hmi/hmiSlice\";\nimport { getTools, selectTools } from \"../tools/toolsSlice\";\nimport * as queryString from \"query-string\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n}\n\nconst HatLoginApplicationHandler: React.FC<Props> = props => {\n  const errorMessage = useSelector(selectErrorMessage);\n  const applications = useSelector(selectApplications);\n  const parentApp = useSelector(selectParentApp);\n  const tools = useSelector(selectTools);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (applications && applications.length > 0) {\n      const { application_id, name } = queryString.parse(window.location.search) as Query;\n\n      const applicationId = application_id || name;\n      const applicationIdSafe = applicationId?.toLowerCase();\n      const parentApp = applications.find(app => app.application.id === applicationIdSafe);\n\n      if (!parentApp || (['App', 'DataPlug'].indexOf(parentApp.application.kind.kind) === -1)) {\n        dispatch(setRedirectError('application_misconfigured', 'application_id_not_found '));\n        return;\n      }\n\n      const parentPlugDependencies = parentApp.application.dependencies?.plugs || [];\n      const parentToolDependencies = parentApp.application.dependencies?.tools || [];\n\n      dispatch(setParentApp(parentApp));\n      dispatch(setDependencyApps(applications.filter(app => parentPlugDependencies.indexOf(app.application.id) > -1)));\n\n      if (parentToolDependencies.length > 0) {\n        dispatch(getTools());\n      }\n    }\n\n  }, [applications, dispatch]);\n\n  useEffect(() => {\n    if (tools && tools.length > 0) {\n      if (!parentApp) return;\n\n      const parentToolDependencies = parentApp.application.dependencies?.tools || [];\n\n      dispatch(setDependencyTools(tools.filter(tool => parentToolDependencies.indexOf(tool.id) !== -1)));\n    }\n  }, [parentApp, tools, dispatch]);\n\n  const redirectBack = () => {\n    dispatch(setRedirectError('hat_exception', 'internal_server_error'));\n  };\n\n  if (errorMessage && applications.length === 0) {\n    return (\n      <div>\n        <div className=\"app-error\">\n          <h3 className=\"app-error-header\">Looks like something went wrong</h3>\n          <p className=\"app-error-text\">{errorMessage}</p>\n          <button className={'btn btn-accent'}\n            onClick={() => redirectBack()}>\n            Back\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginApplicationHandler;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { HatApplication } from '@dataswift/hat-js/lib/interfaces/hat-application.interface';\nimport { HatClientService } from '../../services/HatClientService';\nimport {\n  selectDependencyApps,\n  selectDependencyPlugsAreActive,\n  selectDependencyToolsEnabled,\n  selectParentApp,\n} from '../hmi/hmiSlice';\nimport * as queryString from 'query-string';\nimport { addMinutes, isFuture, parseISO } from 'date-fns';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  fallback?: string;\n  internal?: string;\n};\n\nconst HatLoginBuildRedirect: React.FC<Props> = (props) => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const dependencyPlugsAreActive = useSelector(selectDependencyPlugsAreActive);\n  const dependencyToolsAreEnabled = useSelector(selectDependencyToolsEnabled);\n\n  useEffect(() => {\n    const buildRedirect = async (app: HatApplication) => {\n      const { redirect_uri, redirect, internal } = queryString.parse(window.location.search) as Query;\n\n      const isInternal = internal === 'true';\n      const redirectParam = redirect_uri || redirect;\n      const redirectParamDecoded = decodeURIComponent(redirectParam || '');\n\n      if (isInternal) {\n        window.location.href = redirectParam || '';\n      } else {\n        const hatSvc = HatClientService.getInstance();\n\n        try {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            const { accessToken } = resAppLogin.parsedBody;\n            const setup = app.application.setup;\n\n            const isRedirectUrlValid = setup.validRedirectUris.includes(redirectParamDecoded);\n\n            const attemptedSetup = {\n              applicationId: app.application.id,\n              date: addMinutes(new Date(), 10),\n            };\n\n            sessionStorage.setItem('attempted_setup', JSON.stringify(attemptedSetup));\n\n            // This is a hack and ideally should be removed. This is what allows the log in via dataswift.io webpage,\n            // without this check users are redirected back to the dataswift.io page with the token attached.\n            // The problem is that the dataswift.io page has no idea what to do with the token and\n            // users are stuck there. With this hack users are being redirected\n            // back to their PDA Dashboard which is the intended behaviour.\n            const isDataswiftWebsite = redirectParamDecoded?.includes('www.dataswift.io/sign-up-login');\n\n            const paramTokem = redirectParam?.includes('?') ? '&' : '?';\n\n            const url = isDataswiftWebsite\n              ? window.location.origin + '/feed'\n              : `${redirectParam?.replace('#', '%23')}${paramTokem}token=${accessToken}`;\n\n            if (isRedirectUrlValid) {\n              // eslint-disable-next-line max-len\n              window.location.href = url;\n            } else {\n              console.warn('Provided URL is not registered');\n\n              hatSvc\n                .sendReport('hmi_invalid_redirect_url', `${app.application.id}: ${redirectParam}`)\n                .then(() => {\n                  window.location.href = url;\n                })\n                .catch(() => {\n                  window.location.href = url;\n                });\n            }\n          }\n        } catch (e) {}\n      }\n    };\n\n    if (\n      parentApp &&\n      parentApp.active &&\n      !parentApp.needsUpdating &&\n      dependencyPlugsAreActive &&\n      dependencyToolsAreEnabled\n    ) {\n      buildRedirect(parentApp);\n      return;\n    }\n\n    const attemptedSetup = sessionStorage.getItem('attempted_setup');\n\n    if (parentApp && parentApp.enabled && attemptedSetup) {\n      const session = JSON.parse(attemptedSetup) as { applicationId: string; date: string };\n\n      if (session.applicationId === parentApp.application.id && isFuture(parseISO(session.date))) {\n        buildRedirect(parentApp);\n        return;\n      }\n    }\n  }, [parentApp, dependencyApps, dependencyPlugsAreActive, dependencyToolsAreEnabled]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginBuildRedirect;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HatApplication } from \"@dataswift/hat-js/lib/interfaces/hat-application.interface\";\nimport { HatClientService } from \"../../services/HatClientService\";\nimport {\n  selectDependencyApps,\n  selectDependencyPlugsAreActive,\n  selectParentApp\n} from \"../hmi/hmiSlice\";\nimport * as queryString from \"query-string\";\nimport { addMinutes, isFuture, parseISO } from \"date-fns\";\n\ntype Props = {\n    children: React.ReactNode;\n}\n\ntype Query = {\n  application_id?: string;\n  name?: string;\n  redirect_uri?: string;\n  redirect?: string;\n  dependencies?: string;\n}\n\nconst HatLoginSetupDependency: React.FC<Props> = props => {\n  const parentApp = useSelector(selectParentApp);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const plugsAreActive = useSelector(selectDependencyPlugsAreActive);\n\n  useEffect(() => {\n    const { application_id, name, redirect_uri, redirect, dependencies } =\n        queryString.parse(window.location.search) as Query;\n\n    const setupAppDependencies = async (dependencies: HatApplication[]) => {\n      const app = dependencies.filter(d => !d.active)[0];\n      const callback = intermediateCallBackUrl(app.application.id);\n\n      try {\n        const hatSvc = HatClientService.getInstance();\n\n        if (app?.application.id) {\n          const resAppLogin = await hatSvc.appLogin(app.application.id);\n\n          if (resAppLogin?.parsedBody?.accessToken) {\n            const attemptedSetup = {\n              applicationId: parentApp?.application.id,\n              date: addMinutes(new Date(), 10)\n            };\n\n            sessionStorage.setItem('attempted_setup', JSON.stringify(attemptedSetup));\n\n            // eslint-disable-next-line max-len\n            window.location.href = `${ app.application.setup.url }?token=${ resAppLogin.parsedBody.accessToken }&redirect=${ callback }`;\n          }\n        }\n      } catch (e) {\n        console.log('Setup dependencies errored', e);\n      }\n    };\n\n    const intermediateCallBackUrl = (appId?: string): string => {\n      let url = window.location.href.split('?')[0];\n      const applicationId = application_id || name;\n      const applicationIdSafe = applicationId?.toLowerCase();\n      const redirectParam = redirect_uri || redirect;\n      const dependenciesParam = dependencies;\n\n      url += `?application_id=${ applicationIdSafe }%26redirect_uri=${ redirectParam }`;\n\n      if (dependenciesParam) {\n        // removes the application id from the dependency parameter\n        const dependencyArray = dependenciesParam.split(',').filter(item => item !== appId);\n        if (dependencyArray && dependencyArray.length > 0) {\n          url += `%26dependencies=${ dependencyArray.join() }`;\n        }\n      } else {\n        if (dependencyApps) {\n          const dependencyArray = dependencyApps\n            .filter(app => app.application.id !== appId)\n            .map(app => app.application.id);\n          if (dependencyArray && dependencyArray.length > 0) {\n            url += `%26dependencies=${ dependencyArray.join() }`;\n          }\n        }\n      }\n\n      return url.replace('#', '%23');\n    };\n\n    const attemptedSetup = sessionStorage.getItem('attempted_setup');\n\n    if (parentApp && dependencyApps && dependencyApps.length > 0 && attemptedSetup) {\n      const session = JSON.parse(attemptedSetup) as {applicationId: string, date: string};\n\n      if ((session.applicationId === parentApp.application.id) && isFuture(parseISO(session.date))) {\n        return;\n      }\n    }\n\n    if (parentApp && parentApp.active && !plugsAreActive) {\n      setupAppDependencies(dependencyApps);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [parentApp, dependencyApps, plugsAreActive]);\n\n  return <>{props.children}</>;\n};\n\nexport default HatLoginSetupDependency;\n","export const hmiConfig = {\n  links: {\n    hatdexRating:\n      'https://docs.dataswift.io/deploy/rating-assurance-and-certification',\n    termsOfService:\n      'https://www.dataswift.io/legal/dataswift-personal-data-account-owner-agreement',\n    privacyPolicy:\n      'https://www.dataswift.io/legal/privacy-policy',\n  },\n};\n","import { HatApplicationContent } from '@dataswift/hat-js/lib/interfaces/hat-application.interface';\nimport React from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport './UpdateNotes.scss';\nimport FormatMessage from \"../../messages/FormatMessage\";\nimport { hmiConfig } from \"../../hmi/hmi.config\";\n\ntype Props = {\n  app: HatApplicationContent;\n  onApproved: () => void;\n  onRejected: () => void;\n};\nexport const UpdateNotes: React.FC<Props> = ({ app, onApproved, onRejected }) => {\n  if (!app.info.updateNotes) return null;\n\n  const HmiActions: React.FC = () => {\n\n    if (!app) {\n      return null;\n    }\n\n    return (\n      <div className=\"hmi-actions-footer\">\n        <div className=\"sticky-action-panel-content\">\n          <div className=\"action-buttons\">\n            <button className=\"secondary-action\" onClick={() => onRejected()}>\n              <FormatMessage id={'hmi.actions.cancel'} />\n            </button>\n            <button className=\"primary-action\" onClick={() => onApproved()}>\n              <FormatMessage id={'hmi.actions.confirm'} />\n            </button>\n          </div>\n\n          <p className=\"tos-text\">\n            <FormatMessage id={'hmi.actions.agreeWithTermsAndPrivacy.part1'} />\n            <a\n              href={hmiConfig.links.termsOfService}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormatMessage\n                id={'hmi.actions.agreeWithTermsAndPrivacy.termsOfService'}\n              />\n            </a>\n                        ,{' '}\n            <a\n              href={hmiConfig.links.privacyPolicy}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormatMessage\n                id={'hmi.actions.agreeWithTermsAndPrivacy.privacyPolicy'}\n              />\n            </a>\n            <FormatMessage id={'hmi.actions.agreeWithTermsAndPrivacy.part2'} />\n          </p>\n\n          <p className=\"hmi-id-text\">\n                        HMI ID: {app.id}-{app.info.version}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"content-wrapper flex-column-wrapper flex-align-items-center\">\n      <section className=\"title-section\">\n        <div className=\"app-logo-wrapper\">\n          <img src={app.info.graphics.logo.normal}\n            className=\"app-logo\" \n            height=\"100\"\n            width=\"100\"\n            alt={`${ app.info.name } logo`}\n          />\n        </div>\n        {app.kind.kind === 'App' && (\n          <div className=\"app-rating-wrapper\">\n            <div className=\"app-rating\">\n              <span className=\"app-rating-highlighted\">{app.info.rating.score}&nbsp;</span>\n            </div>\n          </div>\n        )}\n\n        <h3 className=\"title-section-heading\">{app.info.name}</h3>\n        <div className=\"title-section-text\">\n          <Markdown>{app.info.updateNotes.header}</Markdown>\n        </div>\n      </section>\n\n      <section className=\"update-notes-section\">\n        <h4 className=\"section-header\">Summary of updates</h4>\n        {app.info.updateNotes.notes && (\n          <ul className=\"app-update-notes\">\n            {app.info.updateNotes.notes.map((note, index) => {\n              return (\n                <li className=\"app-update-notes-item\" key={index}>\n                  <div className=\"app-update-notes-item-content\">\n                    <Markdown>{note}</Markdown>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </section>\n      <HmiActions />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDependencyApps, selectDependencyTools, selectParentApp } from \"../hmi/hmiSlice\";\nimport { LoadingSpinner } from \"../../components/LoadingSpinner/LoadingSpinner\";\nimport { Hmi } from \"hmi\";\nimport { onTermsAgreed, onTermsDeclined, selectErrorMessage, setRedirectError } from \"./hatLoginSlice\";\nimport { UpdateNotes } from \"./UpdateNotes/UpdateNotes\";\nimport { NotificationBanner } from \"../../components/banners/NotificationBanner/NotificationBanner\";\nimport { selectLanguage } from \"../language/languageSlice\";\n\nconst HatLoginHmi: React.FC = () => {\n  const hatName = window.location.host;\n  const dispatch = useDispatch();\n  const language = useSelector(selectLanguage);\n  const parentApp = useSelector(selectParentApp);\n  const errorMessage = useSelector(selectErrorMessage);\n  const dependencyApps = useSelector(selectDependencyApps);\n  const dependencyTools = useSelector(selectDependencyTools);\n\n  const redirectBack = () => {\n    dispatch(setRedirectError('hat_exception', 'enabling_application_failed'));\n  };\n\n  if ((!parentApp || parentApp.active) || (parentApp.application.dependencies &&\n      parentApp.application.dependencies.plugs?.length !== dependencyApps.length) ||\n      (parentApp.application.dependencies &&\n          parentApp.application.dependencies.tools?.length !== dependencyTools.length)) {\n    return <LoadingSpinner loadingText={'Loading permissions...'}/>;\n  }\n\n  return (\n    <div>\n      <NotificationBanner type={'error'} display={!!errorMessage} fixed={true}>\n        <div className={'hat-login-notification'}>\n          <p>\n            An error has occurred, please use the back button to return to the previous page <br />\n            and try confirming again. If this error persists please{' '}\n            <a href={'mailto:contact@dataswift.io'} className={'link-button'}>contact us</a>\n          </p>\n          <button className={'btn btn-accent'} onClick={() => redirectBack()}>Back</button>\n        </div>\n      </NotificationBanner>\n\n      <span className={'flex-spacer-small'} />\n      {parentApp && parentApp.needsUpdating && parentApp.application.info.updateNotes ? (\n        <UpdateNotes app={parentApp.application}\n          onApproved={() => dispatch(onTermsAgreed(parentApp?.application.id || ''))}\n          onRejected={() => dispatch(onTermsDeclined())}\n        />\n      ) : (\n        <Hmi\n          parentApp={parentApp.application}\n          email={hatName}\n          language={language}\n          dependencyTools={dependencyTools.map(tool => tool.info.name)}\n          dependencyApps={dependencyApps.map(app => app.application)}\n          onApproved={() => dispatch(onTermsAgreed(parentApp?.application.id || ''))}\n          onRejected={() => dispatch(onTermsDeclined())}\n        />)\n      }\n    </div>\n  );\n};\n\nexport default HatLoginHmi;\n","import React from \"react\";\nimport HatLoginParamValidation from \"./HatLoginParamValidation\";\nimport HatLoginHmi from \"./HatLoginHmi\";\nimport HatLoginRedirectError from \"./HatLoginRedirectError\";\nimport HatLoginApplicationHandler from \"./HatApplicationHandler\";\nimport HatLoginBuildRedirect from \"./HatLoginBuildRedirect\";\nimport HatLoginSetupDependency from \"./HatLoginSetupDependency\";\nimport './HatLogin.scss';\n\nconst HatLogin: React.FC = () => {\n  return (\n    <HatLoginParamValidation>\n      <HatLoginApplicationHandler>\n        <HatLoginBuildRedirect>\n          <HatLoginSetupDependency>\n            <HatLoginRedirectError>\n              <HatLoginHmi />\n            </HatLoginRedirectError>\n          </HatLoginSetupDependency>\n        </HatLoginBuildRedirect>\n      </HatLoginApplicationHandler>\n    </HatLoginParamValidation>\n  );\n};\n\nexport default HatLogin;\n"],"sourceRoot":""}